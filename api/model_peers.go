/*
 * upmon
 *
 * A cloud-native, distributed uptime monitor written in Go
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Peers struct for Peers
type Peers struct {
	Peers []Peer `json:"peers"`
}

// NewPeers instantiates a new Peers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeers(peers []Peer) *Peers {
	this := Peers{}
	this.Peers = peers
	return &this
}

// NewPeersWithDefaults instantiates a new Peers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeersWithDefaults() *Peers {
	this := Peers{}
	return &this
}

// GetPeers returns the Peers field value
func (o *Peers) GetPeers() []Peer {
	if o == nil {
		var ret []Peer
		return ret
	}

	return o.Peers
}

// GetPeersOk returns a tuple with the Peers field value
// and a boolean to check if the value has been set.
func (o *Peers) GetPeersOk() (*[]Peer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Peers, true
}

// SetPeers sets field value
func (o *Peers) SetPeers(v []Peer) {
	o.Peers = v
}

func (o Peers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["peers"] = o.Peers
	}
	return json.Marshal(toSerialize)
}

type NullablePeers struct {
	value *Peers
	isSet bool
}

func (v NullablePeers) Get() *Peers {
	return v.value
}

func (v *NullablePeers) Set(val *Peers) {
	v.value = val
	v.isSet = true
}

func (v NullablePeers) IsSet() bool {
	return v.isSet
}

func (v *NullablePeers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeers(val *Peers) *NullablePeers {
	return &NullablePeers{value: val, isSet: true}
}

func (v NullablePeers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
