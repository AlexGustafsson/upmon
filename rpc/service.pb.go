// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/service.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServicePing_ServiceStatus int32

const (
	ServicePing_UNKNOWN    ServicePing_ServiceStatus = 0
	ServicePing_DOWN       ServicePing_ServiceStatus = 1
	ServicePing_GOING_UP   ServicePing_ServiceStatus = 2
	ServicePing_UP         ServicePing_ServiceStatus = 3
	ServicePing_GOING_DOWN ServicePing_ServiceStatus = 4
)

var ServicePing_ServiceStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "DOWN",
	2: "GOING_UP",
	3: "UP",
	4: "GOING_DOWN",
}

var ServicePing_ServiceStatus_value = map[string]int32{
	"UNKNOWN":    0,
	"DOWN":       1,
	"GOING_UP":   2,
	"UP":         3,
	"GOING_DOWN": 4,
}

func (x ServicePing_ServiceStatus) String() string {
	return proto.EnumName(ServicePing_ServiceStatus_name, int32(x))
}

func (ServicePing_ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{0, 0}
}

type ServicePing struct {
	// UUIDv4 in URN form
	ServiceId            string                    `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	Status               ServicePing_ServiceStatus `protobuf:"varint,2,opt,name=status,proto3,enum=rpc.ServicePing_ServiceStatus" json:"status,omitempty"`
	Timestamp            *timestamp.Timestamp      `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ServicePing) Reset()         { *m = ServicePing{} }
func (m *ServicePing) String() string { return proto.CompactTextString(m) }
func (*ServicePing) ProtoMessage()    {}
func (*ServicePing) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{0}
}

func (m *ServicePing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServicePing.Unmarshal(m, b)
}
func (m *ServicePing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServicePing.Marshal(b, m, deterministic)
}
func (m *ServicePing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServicePing.Merge(m, src)
}
func (m *ServicePing) XXX_Size() int {
	return xxx_messageInfo_ServicePing.Size(m)
}
func (m *ServicePing) XXX_DiscardUnknown() {
	xxx_messageInfo_ServicePing.DiscardUnknown(m)
}

var xxx_messageInfo_ServicePing proto.InternalMessageInfo

func (m *ServicePing) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *ServicePing) GetStatus() ServicePing_ServiceStatus {
	if m != nil {
		return m.Status
	}
	return ServicePing_UNKNOWN
}

func (m *ServicePing) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec64d44e618a02a6, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("rpc.ServicePing_ServiceStatus", ServicePing_ServiceStatus_name, ServicePing_ServiceStatus_value)
	proto.RegisterType((*ServicePing)(nil), "rpc.ServicePing")
	proto.RegisterType((*Empty)(nil), "rpc.Empty")
}

func init() { proto.RegisterFile("rpc/service.proto", fileDescriptor_ec64d44e618a02a6) }

var fileDescriptor_ec64d44e618a02a6 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x86, 0x5d, 0x68, 0x69, 0x19, 0xb4, 0xe2, 0x9c, 0x08, 0x31, 0x4a, 0x38, 0x71, 0x5a, 0x12,
	0x4c, 0x4c, 0x1f, 0x40, 0xd3, 0x34, 0x1a, 0x4a, 0x40, 0xe2, 0xd1, 0xb4, 0x14, 0x09, 0x89, 0xb0,
	0x9b, 0x65, 0x6b, 0xe2, 0x33, 0xfb, 0x12, 0xc6, 0xa5, 0xd8, 0xda, 0xdb, 0xe4, 0xcb, 0xf7, 0xcf,
	0xfe, 0x3b, 0x70, 0x25, 0x78, 0x11, 0x76, 0xa5, 0xf8, 0xac, 0x8b, 0x92, 0x72, 0xc1, 0x24, 0x43,
	0x5d, 0xf0, 0xc2, 0xbd, 0xad, 0x18, 0xab, 0x3e, 0xca, 0x50, 0xa1, 0xcd, 0xee, 0x3d, 0x94, 0x75,
	0x53, 0x76, 0x72, 0xdd, 0xf0, 0xde, 0xf2, 0xbf, 0x09, 0x58, 0x59, 0x9f, 0x4b, 0xea, 0xb6, 0xc2,
	0x6b, 0x30, 0xf7, 0x6b, 0x96, 0x5b, 0x87, 0x78, 0x24, 0x30, 0xd3, 0x03, 0xc0, 0x7b, 0x30, 0x3a,
	0xb9, 0x96, 0xbb, 0xce, 0xd1, 0x3c, 0x12, 0xcc, 0xa2, 0x1b, 0x2a, 0x78, 0x41, 0x8f, 0xf2, 0xc3,
	0x9c, 0x29, 0x2b, 0xdd, 0xdb, 0x38, 0x07, 0xf3, 0xef, 0x61, 0x47, 0xf7, 0x48, 0x60, 0x45, 0x2e,
	0xed, 0xab, 0xd1, 0xa1, 0x1a, 0x7d, 0x19, 0x8c, 0xf4, 0x20, 0xfb, 0xcf, 0x70, 0xf1, 0x6f, 0x25,
	0x5a, 0x30, 0xc9, 0xe3, 0xa7, 0x78, 0xf5, 0x1a, 0xdb, 0x67, 0x38, 0x85, 0xd1, 0xc3, 0xef, 0x44,
	0xf0, 0x1c, 0xa6, 0x8b, 0xd5, 0x32, 0x5e, 0xbc, 0xe5, 0x89, 0xad, 0xa1, 0x01, 0x5a, 0x9e, 0xd8,
	0x3a, 0xce, 0x00, 0x7a, 0xaa, 0xac, 0x91, 0x3f, 0x81, 0xf1, 0x63, 0xc3, 0xe5, 0x57, 0x34, 0x87,
	0x71, 0xce, 0x1b, 0xd6, 0x62, 0x08, 0x97, 0x59, 0xd9, 0x6e, 0x8f, 0x4f, 0x60, 0x9f, 0x7e, 0xca,
	0x05, 0x45, 0x54, 0x72, 0x63, 0xa8, 0xbe, 0x77, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x3d,
	0xc8, 0xf6, 0x72, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UpmonClient is the client API for Upmon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpmonClient interface {
	SendServicePing(ctx context.Context, in *ServicePing, opts ...grpc.CallOption) (*Empty, error)
}

type upmonClient struct {
	cc *grpc.ClientConn
}

func NewUpmonClient(cc *grpc.ClientConn) UpmonClient {
	return &upmonClient{cc}
}

func (c *upmonClient) SendServicePing(ctx context.Context, in *ServicePing, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/rpc.Upmon/SendServicePing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpmonServer is the server API for Upmon service.
type UpmonServer interface {
	SendServicePing(context.Context, *ServicePing) (*Empty, error)
}

// UnimplementedUpmonServer can be embedded to have forward compatible implementations.
type UnimplementedUpmonServer struct {
}

func (*UnimplementedUpmonServer) SendServicePing(ctx context.Context, req *ServicePing) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendServicePing not implemented")
}

func RegisterUpmonServer(s *grpc.Server, srv UpmonServer) {
	s.RegisterService(&_Upmon_serviceDesc, srv)
}

func _Upmon_SendServicePing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServicePing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpmonServer).SendServicePing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Upmon/SendServicePing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpmonServer).SendServicePing(ctx, req.(*ServicePing))
	}
	return interceptor(ctx, in, info, handler)
}

var _Upmon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Upmon",
	HandlerType: (*UpmonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendServicePing",
			Handler:    _Upmon_SendServicePing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/service.proto",
}
